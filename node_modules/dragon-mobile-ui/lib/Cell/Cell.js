'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Cell = function (_Component) {
  _inherits(Cell, _Component);

  function Cell() {
    _classCallCheck(this, Cell);

    return _possibleConstructorReturn(this, (Cell.__proto__ || Object.getPrototypeOf(Cell)).apply(this, arguments));
  }

  _createClass(Cell, [{
    key: 'render',
    value: function render() {
      var _classnames;

      var props = this.props;

      var type = props.type,
          theme = props.theme,
          icon = props.icon,
          title = props.title,
          description = props.description,
          help = props.help,
          children = props.children,
          className = props.className,
          others = _objectWithoutProperties(props, ['type', 'theme', 'icon', 'title', 'description', 'help', 'children', 'className']);

      var cls = (0, _classnames3.default)((_classnames = {
        'ui-cell': true
      }, _defineProperty(_classnames, 'ui-cell-' + type, true), _defineProperty(_classnames, 'theme-' + theme, !!theme), _defineProperty(_classnames, className, !!className), _classnames));

      var iconRender = icon ? _react2.default.createElement(
        'div',
        { className: 'ui-cell-icon' },
        icon
      ) : null;

      var titleRender = title ? _react2.default.createElement(
        'div',
        { className: 'ui-cell-title' },
        title
      ) : null;

      var contentRender = children ? _react2.default.createElement(
        'div',
        { className: 'ui-cell-content' },
        children
      ) : null;

      var helpRender = help ? _react2.default.createElement(
        'div',
        { className: 'ui-cell-explain' },
        _react2.default.createElement(
          'div',
          { className: 'ui-cell-explain-text' },
          help
        )
      ) : null;
      return _react2.default.createElement(
        'div',
        _extends({ className: cls }, others),
        _react2.default.createElement(
          'div',
          { className: 'ui-cell-inner' },
          _react2.default.createElement(
            'div',
            { className: 'ui-cell-header' },
            iconRender
          ),
          _react2.default.createElement(
            'div',
            { className: 'ui-cell-body' },
            titleRender,
            contentRender
          ),
          _react2.default.createElement(
            'div',
            { className: 'ui-cell-footer' },
            description
          )
        ),
        helpRender
      );
    }
  }]);

  return Cell;
}(_react.Component);

Cell.propTypes = {
  type: _react.PropTypes.oneOf(['normal', 'link', 'select']),
  className: _react.PropTypes.string
};

Cell.defaultProps = {
  type: 'normal',
  className: null
};

exports.default = Cell;