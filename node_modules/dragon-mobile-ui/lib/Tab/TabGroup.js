'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _Tab = require('./Tab');

var _Tab2 = _interopRequireDefault(_Tab);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TabGroup = function (_Component) {
  _inherits(TabGroup, _Component);

  function TabGroup(props) {
    _classCallCheck(this, TabGroup);

    var _this = _possibleConstructorReturn(this, (TabGroup.__proto__ || Object.getPrototypeOf(TabGroup)).call(this, props));

    _this.state = {
      value: props.value || props.defaultValue || _this.getSelectIndex(props.children) || 0
    };
    return _this;
  }

  _createClass(TabGroup, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ('value' in nextProps || this.getSelectIndex(nextProps.children)) {
        this.setState({
          value: nextProps.value
        });
      }
    }
  }, {
    key: 'getSelectIndex',
    value: function getSelectIndex(children) {
      var selectIndex = void 0;
      _react2.default.Children.forEach(children, function (item, $index) {
        if (item.props && item.props.selected) {
          selectIndex = $index;
        }
      });
      return selectIndex;
    }
  }, {
    key: 'getTitleItemCls',
    value: function getTitleItemCls(idx) {
      return idx === this.state.value ? 'ui-tab-header-item active' : 'ui-tab-header-item';
    }
  }, {
    key: 'getContentItemCls',
    value: function getContentItemCls(idx) {
      return idx === this.state.value ? 'ui-tab-body-item active' : 'ui-tab-body-item';
    }
  }, {
    key: 'render',
    value: function render() {
      var _classnames,
          _this2 = this;

      var props = this.props;

      var isRadius = props.isRadius,
          theme = props.theme,
          className = props.className,
          children = props.children,
          onChange = props.onChange,
          others = _objectWithoutProperties(props, ['isRadius', 'theme', 'className', 'children', 'onChange']);

      var cls = (0, _classnames3.default)((_classnames = {
        'ui-tab': true,
        'radius': 'radius' in props || isRadius
      }, _defineProperty(_classnames, 'theme-' + theme, !!theme), _defineProperty(_classnames, className, !!className), _classnames));

      var items = _react2.default.Children.map(children, function (item, $index) {
        return _react2.default.createElement(
          'li',
          { key: $index, className: _this2.getTitleItemCls($index), onClick: function onClick() {
              _this2.setState({ value: $index }, onChange($index));
            } },
          item.props.title
        );
      });

      var content = _react2.default.Children.map(children, function (item, $index) {
        return _react2.default.createElement(
          _Tab2.default,
          _extends({}, item.props, { selected: !!(_this2.state.value === $index) }),
          item.props.children
        );
      });

      var lineStyle = {
        width: 100 / items.length + '%',
        left: 100 * this.state.value / items.length + '%'
      };

      return _react2.default.createElement(
        'div',
        _extends({}, others, { className: cls }),
        _react2.default.createElement(
          'div',
          { className: 'ui-tab-header' },
          _react2.default.createElement(
            'ul',
            null,
            items
          ),
          _react2.default.createElement('div', { className: 'ui-tab-header-line', style: lineStyle })
        ),
        _react2.default.createElement(
          'div',
          { className: 'ui-tab-body' },
          content
        )
      );
    }
  }]);

  return TabGroup;
}(_react.Component);

TabGroup.propTypes = {
  theme: _react.PropTypes.oneOf(['default', 'info', 'success', 'warning', 'error']),
  isRadius: _react.PropTypes.bool,
  onChange: _react.PropTypes.func
};

TabGroup.defaultProps = {
  theme: 'default',
  isRadius: false,
  onChange: function onChange() {}
};

exports.default = TabGroup;